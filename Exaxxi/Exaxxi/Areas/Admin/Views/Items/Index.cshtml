@model PagedList.Core.IPagedList<Exaxxi.Models.Items>
@{
    ViewData["Title"] = "Items";
}
<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header card-header-primary">
                <h4 class="card-title ">Danh sách sản phẩm</h4>
                <p class="card-category"></p>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table">
                        <thead class=" text-primary">
                            <tr>
                                <th>
                                    Tên sản phẩm
                                </th>
                                <th>
                                    Hình
                                </th>
                                <th>
                                    Biến động giá
                                </th>
                                <th>
                                    active
                                </th>
                                <th>
                                    sold
                                </th>
                                <th>
                                    admin
                                </th>
                                <th>
                                    category
                                </th>
                                <th><a asp-action="Create">Thêm</a></th>
                            </tr>
                        </thead>
                        <tbody ng-controller="deleteItem">
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.name)
                                    </td>
                                    <td>
                                        <img src="~/images/item/@item.img" width="20" height="100"/>
                                        
                                    </td>
                                    <td>
                                        
                                        @Html.DisplayFor(modelItem => item.volatility)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.active)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.sold)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.admin.email)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.category.name)
                                    </td>
                                    <td>
                                        <a asp-action="Edit" asp-route-id="@item.id">Edit</a> |
                                        <a asp-action="Details" asp-route-id="@item.id">Details</a> |
                                        <a style="cursor: pointer;" id="delete" class="delete" ng-click="Delete(@item.id)">Delete</a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<pager class="pager-container" list="@Model" asp-action="Index" asp-controller="items" />
@section Scripts{
    <script>
        app.controller('deleteItem', function ($scope, $http) {
            $scope.Delete = function (id) {
                var url = '/api/ItemsChange/' + id;
                //  $http.defaults.headers.common.Authorization = 'Bearer ' + sessionStorage.getItem('token');
                var config = {
                    headers: {
                        'Context-Type': 'application/json',
                        'Authorization': 'Bearer ' + sessionStorage.getItem('token')
                    }
                }
                var isConfirm = confirm("bạn có chắc chắn muốn xóa")
                if (isConfirm) {
                    $http.delete(url, config).then(function (response) {
                        window.location.reload();
                    });

                } else {
                    return false;
                }
            }
        });
    </script>
}
